name: Test Builds
on:
  # run for all pull requests
  # Run for all commits (e.g. on feature branches)
  push:
  pull_request:
jobs:
  ###############################################################################
  # builds the plugin on windows
  testBuildWindows:
    runs-on: windows-latest

    steps:
    - name: Setup cmake
      uses: jwlawson/actions-setup-cmake@v1.8
      with:
        cmake-version: '3.19.x'

    - name: Checkout
      uses: actions/checkout@v2
      with:
        submodules: recursive

    - name: Configure
      run: |
        cmake.exe -G "Visual Studio 16 2019" -A x64 -B build

    - name: Build
      run: |
        cmake --build build --config Release

    - name: Run Tests
      run: |
        bin\RELEASE\GranularProcessor_Gtest.exe --gtest_output=xml:TestResults\gtestResults_windows.xml

    - name: Upload Test Results
      uses: actions/upload-artifact@v2
      with:
        name: TestResults
        path: TestResults/**

    - name: Upload executable
      uses: actions/upload-artifact@v2
      with:
        name: GranularProcessor_Windows
        path: |
          bin\RELEASE\Granular Processor.vst3
          bin\RELEASE\Granular Processor.exe
          bin\RELEASE\GranularProcessor_Gtest.exe

  ###############################################################################
  # builds the plugin on macos
  testBuildMacOS:
    runs-on: macos-latest

    steps:
    - name: Setup cmake
      uses: jwlawson/actions-setup-cmake@v1.8
      with:
        cmake-version: '3.19.x'

    - uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: latest-stable

    - name: Checkout
      uses: actions/checkout@v2
      with:
        submodules: recursive

    - name: Configure
      run: |
        cmake -G "Xcode" -B build -DCMAKE_OSX_ARCHITECTURES="arm64;x86_64"

    - name: Build
      run: |
        cmake --build build --config Release

    - name: Run Tests
      run: |
        bin/RELEASE/GranularProcessor_Gtest --gtest_output=xml:TestResults/gtestResults_macos.xml

    - name: Upload Test Results
      uses: actions/upload-artifact@v2
      with:
        name: TestResults
        path: TestResults/**

    - name: Upload executable
      uses: actions/upload-artifact@v2
      with:
        name: GranularProcessor_MacOS
        path: |
          bin/RELEASE/Granular Processor.vst3/**
          bin/RELEASE/Granular Processor.app/**
          bin/RELEASE/GranularProcessor_Gtest

  ###############################################################################
  # builds the plugin on ubuntu
  testBuildUbuntu:
    runs-on: ubuntu-latest

    steps:
    - name: Setup cmake
      uses: jwlawson/actions-setup-cmake@v1.8
      with:
        cmake-version: '3.19.x'

    - name: Setup dependencies
      run: |
        sudo apt-get -y install g++ libfreetype6-dev libx11-dev libxinerama-dev libxrandr-dev libxcursor-dev mesa-common-dev libasound2-dev freeglut3-dev libxcomposite-dev

    - name: Checkout
      uses: actions/checkout@v2
      with:
        submodules: recursive

    - name: Configure
      run: |
        cmake -G "Unix Makefiles" -B build

    - name: Build
      run: |
        cmake --build build --config Release

    - name: Run Tests
      run: |
        build/GranularProcessor_Gtest --gtest_output=xml:TestResults/gtestResults_ubuntu.xml

    - name: Upload Test Results
      uses: actions/upload-artifact@v2
      with:
        name: TestResults
        path: TestResults/**

    - name: Upload executable
      uses: actions/upload-artifact@v2
      with:
        name: GranularProcessor_Linux
        path: |
          build/GranularProcessor_artefacts/VST3/Granular Processor.vst3
          build/GranularProcessor_artefacts/Standalone/Granular Processor
          build/GranularProcessor_Gtest

  ###############################################################################
  # uploads test results from the previous jobs
  publishTestResults:
    name: "Publish Unit Tests Results"
    needs: [testBuildUbuntu, testBuildMacOS, testBuildWindows]
    runs-on: ubuntu-latest
    # the dependency jobs might be skipped, we don't need to run this job then
    if: success() || failure()

    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v2
        with:
          name: TestResults
          path: TestResults

      - name: Publish Test Results
        uses: EnricoMi/publish-unit-test-result-action@v1
        if: always()
        with:
          files: TestResults/**/*.xml
          github_token: ${{ secrets.GITHUB_TOKEN }}


